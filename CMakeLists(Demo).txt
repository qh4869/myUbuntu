# CMake 最低版本号要求
cmake_minimum_required(VERSION 2.8)

# 项目信息
project(ecs)

# include路径, 即头文件路径
# ${PROJECT_SOURCE_DIR}表示CmakeLists.txt的路径
# ${PROJECT_BINARY_DIR}表示执行cmake的当前路径，即生成makefile的路径
include_directories(${PROJECT_SOURCE_DIR}/lib)
include_directories(${PROJECT_SOURCE_DIR}/common)
include_directories(${PROJECT_SOURCE_DIR}/othersrc)

# 生成debug or release版本
# c++11 
# made in 2018
SET(CMAKE_BUILD_TYPE "release")
if (CMAKE_BUILD_TYPE STREQUAL debug)
    add_definitions(-D_DEBUG)
endif ()
SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -O0 -Wall -g -ggdb -std=c++11")
SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O3 -Wall -std=c++11")

# 把所有的源文件统计到变量AllSrcFile中
# CmakeConfig.txt定义了多选一文件怎么选择
# 例如下面两行
# set(PREDICTFILE xgboost.cpp) 
# set(ALLOCPMFILE AllocPM_DEMO.cpp) 
# 目录下的所有文件统计到一个变量中
aux_source_directory(. DIR_SRCS)
aux_source_directory(common DIR_COMMON)
aux_source_directory(othersrc DIR_OTHER)
# 单个文件统计到变量中
include(CmakeConfig.txt)
set(OurPredict ${PROJECT_SOURCE_DIR}/Predict/${PREDICTFILE})
set(OurAllocPM ${PROJECT_SOURCE_DIR}/AllocPM/${ALLOCPMFILE})
set(AllSrcFile ${DIR_SRCS} ${DIR_COMMON} ${DIR_OTHER} ${OurPredict} ${OurAllocPM})

# 设置可执行文件生成路径
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/../_bin)
# 指定生成目标
add_executable(ecs ${AllSrcFile}) 
# ps add_library可以生成库文件

# install路径，默认usr/local/bin
SET(CMAKE_INSTALL_PREFIX < install_path >)
# install(后面第三个参数表示相对路径),其它类型文件的安装略
INSTALL(TARGETS myrun mylib mystaticlib
RUNTIME DESTINATION bin # 二进制文件
LIBRARY DESTINATION lib # 动态链接库
ARCHIVE DESTINATION libstatic # 静态链接库
)


# 工程文件重新打包，整理到所要求的特定的工程文件结构
# rm前面好像不用有-
add_custom_target(mksubpackage
            -rm -rf ${PROJECT_SOURCE_DIR}/../_package
            COMMAND cp -r ${PROJECT_SOURCE_DIR}/../origin-sdk-gcc/ ${PROJECT_SOURCE_DIR}/../_package
            COMMAND cp ${PROJECT_SOURCE_DIR}/common/* ${PROJECT_SOURCE_DIR}/../_package/ecs/
            COMMAND cp ${PROJECT_SOURCE_DIR}/othersrc/* ${PROJECT_SOURCE_DIR}/../_package/ecs/
            COMMAND cp ${OurPredict} ${PROJECT_SOURCE_DIR}/../_package/ecs/OurPredict.cpp 
            COMMAND cp ${OurAllocPM} ${PROJECT_SOURCE_DIR}/../_package/ecs/OurAllocPM.cpp
            COMMAND cp 
                ${PROJECT_SOURCE_DIR}/../origin-sdk-gcc/ecs/CMakeLists.txt
                ${PROJECT_SOURCE_DIR}/../origin-sdk-gcc/ecs/ecs.cpp
                ${PROJECT_SOURCE_DIR}/../origin-sdk-gcc/ecs/io.cpp
                ${PROJECT_SOURCE_DIR}/../_package/ecs/
                COMMAND bash ${PROJECT_SOURCE_DIR}/../_package/build.sh
)